Here is a GitHub Action that converts a Markdown file to a PDF. This workflow uses [Pandoc](https://pandoc.org/) to perform the conversion.

### Workflow File: `.github/workflows/convert-markdown-to-pdf.yml`

```yaml
name: Convert Markdown to PDF

on:
  push:
    paths:
      - "**/*.md" # Trigger only when markdown files are modified or pushed
  workflow_dispatch: # Allow manual triggering of the workflow

jobs:
  convert-markdown-to-pdf:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Pandoc and LaTeX
        run: |
          sudo apt-get update
          sudo apt-get install -y pandoc texlive-xetex texlive-fonts-recommended texlive-latex-recommended

      - name: Find Markdown files
        id: find_markdown
        run: |
          files=$(find . -name "*.md")
          echo "::set-output name=markdown_files::$files"
        shell: bash

      - name: Convert Markdown to PDF
        if: steps.find_markdown.outputs.markdown_files != ''
        run: |
          for file in ${{ steps.find_markdown.outputs.markdown_files }}; do
            pandoc "$file" -o "${file%.md}.pdf"
          done
        shell: bash

      - name: Upload PDFs as artifacts
        uses: actions/upload-artifact@v3
        with:
          name: converted-pdfs
          path: "**/*.pdf"
```

### Explanation
1. **Trigger Conditions**:
   - The workflow runs on pushes that modify Markdown files or manually via `workflow_dispatch`.

2. **Install Dependencies**:
   - Installs Pandoc and a minimal LaTeX distribution required to generate PDF files.

3. **Find Markdown Files**:
   - Searches for all `.md` files in the repository.

4. **Convert Markdown to PDF**:
   - Loops through the `.md` files and uses `pandoc` to convert each to a `.pdf` file. The output files retain the same name as the input Markdown files.

5. **Upload Artifacts**:
   - Uploads the generated PDFs as artifacts, making them available for download in the workflow run summary.

### Customization
- You can customize the Pandoc options for advanced formatting, such as adding a template:
  ```bash
  pandoc "$file" -o "${file%.md}.pdf" --template=my-template.tex
  ```

Would you like help testing or customizing this workflow further?
